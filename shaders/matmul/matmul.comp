#version 430
layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (binding =0) buffer M1{
	float m1[];
};

layout (binding=1) buffer M2{
	float m2[];
};

layout (binding=2) buffer M3{
	float m3[];
};

layout (binding=3) buffer Shape{
	uvec3 shape;
};

void main(){
	// dispatch size M, N
	// 0 <= gid.x < M
	// 0 <= gid.y < N
	// gid.y = nr_cols;
	// gid.x = nr_rows;

	uvec2 gid = gl_GlobalInvocationID.xy;
	float value = 0.0f;
	uint M = shape.x;
	uint N = shape.y;
	uint K = shape.z;
	uint target_index  = gid.x * N + gid.y;

	if(gid.x >= gl_NumWorkGroups.x || gid.y >= gl_NumWorkGroups.y){
		return ;
	}

	for(uint i = 0 ; i < K ; ++i){
		value += m1[K * gid.x + i] * m2[ i * N + gid.y];
	}
	m3[target_index] = value;
}