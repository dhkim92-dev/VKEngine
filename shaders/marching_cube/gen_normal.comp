#version 450

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;
layout(std430, binding = 0) readonly buffer Vertex{
	vec3 vertices[];
};

layout(std430, binding = 1) readonly buffer Index{
	uvec3 indices[];
};

layout(std430, binding = 2) readonly buffer Limit{
	uvec3 limit; // x = nr_vertex, y = nr_faces, z = global_invocation_size
};

layout(std430, binding = 3) writeonly buffer Normal{
	float normal[];
};


void main(){
	uint tid = gl_WorkGroupID.x * gl_WorkGroupSize.x + gl_LocalInvocationID.x;
	if(tid > limit.y - 1){ return ;}
	uvec3 pos = indices[tid];
	vec3 norm = (vertices[ pos.x ].xyz + vertices[ pos.y ].xyz + vertices[pos.z].xyz)/3.0;
	normal[3*tid] = norm.x;
	normal[3*tid+1] = norm.y;
	normal[3*tid+2] = norm.z;
}


