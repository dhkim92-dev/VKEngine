#version 450
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding =0 ) buffer Raw{
	float raw[];
};

layout(std430, binding=1 ) buffer EdgeTest{
	uint edge_test[];
};

layout(std140, binding=2 ) uniform IsoValue{
	float isovalue;
};

/*
           	  v7 ______________v6			  
			   /|		 	  /|
			  / |			 / |
			 /  |		    /  |
		    /___|________v5/   |
		   |    |         |    |
		   |  v3|_________|____|v2
		   |   /		  |	  /	
		  e2 e1			  |  /		
		   | /			  | /
		   |______e0______|/
		  v0			  v1
*/			

uint pos2idx(uvec3 pos, uvec3 dim){
	uint idx = pos.x + pos.y * dim.x + pos.z * dim.x * dim.y;
	return idx;
}

void main() {
	uvec3 pos = gl_GlobalInvocationID.xyz;
	uvec3 dim = gl_NumWorkGroups.xyz;
	//uvec3 vdim = dim + uvec3(1);
	uvec3 test;
	bool o = raw[ pos2idx(pos, dim + uvec3(1)) ] > isovalue;
	test.x = uint( o ^^ ( raw[ pos2idx( pos + uvec3(1,0,0), dim + uvec3(1) )] > isovalue ) ) ;
	test.y = uint( o ^^ ( raw[ pos2idx( pos + uvec3(0,1,0), dim + uvec3(1) )] > isovalue ) ) ;
	test.z = uint( o ^^ ( raw[ pos2idx( pos + uvec3(0,0,1), dim + uvec3(1) )] > isovalue ) ) ;
	uint id = 3* pos2idx(pos, dim);
	edge_test[id] = test.x;
	edge_test[id+1] = test.y;
	edge_test[id+2] = test.z;
}
